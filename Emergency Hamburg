local IsOnMobile = table.find({Enum.Platform.IOS, Enum.Platform.Android}, game:GetService("UserInputService"):GetPlatform())
local function RandomTheme()
    local themes = {"Amethyst", "Light", "Aqua", "Rose", "Darker", "Dark"}
    return themes[math.random(1, #themes)]
end
local Guitheme = RandomTheme()
if IsOnMobile then
    local teez
    teez = game:GetService("CoreGui").ChildAdded:Connect(function(P)
		wait(3)
        if P.Name == "ScreenGui" then
            local ScreenGui = Instance.new("ScreenGui")
            local Button = Instance.new("TextButton")
            local UICorner = Instance.new("UICorner")
            ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
            Button.Name = "Hider"
            Button.Parent = P
            Button.Size = UDim2.new(0, 100, 0, 50)
            Button.Position = UDim2.new(0, 10, 0.5, -25)
            Button.BackgroundTransparency = 0.5
			if Guitheme == "Light" then
				Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
			elseif Guitheme == "Amethyst" then
				Button.BackgroundColor3 = Color3.fromRGB(153, 102, 204) 
			elseif Guitheme == "Aqua" then
				Button.BackgroundColor3 = Color3.fromRGB(0, 255, 255) 
			elseif Guitheme == "Rose" then
				Button.BackgroundColor3 = Color3.fromRGB(255, 182, 193) 
			elseif Guitheme == "Darker" then
				Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40) 
			elseif Guitheme == "Dark" then
				Button.BackgroundColor3 = Color3.fromRGB(30, 30, 30) 
			end
            Button.Font = Enum.Font.GothamBold
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.Text = "Hide"
            Button.TextScaled = true
            Button.Draggable = true
            Button.AutoButtonColor = false

            UICorner.Parent = Button
            UICorner.CornerRadius = UDim.new(0, 12)

            Button.MouseButton1Click:Connect(function()
                if Button.Text == "Hide" then
                    Button.Text = "View"
                    for _,F in ipairs(P:GetChildren()) do 
						if F.Name ~= "Hider" then
							F.Visible = false
						end
					end
                elseif Button.Text == "View" then
                    Button.Text = "Hide"
                    for _,F in ipairs(P:GetChildren()) do 
						if F.Name ~= "Hider" then
							F.Visible = true
						end
					end
                end
            end)

            getgenv().Done = true
        end
    end)
    spawn(function()
        while not getgenv().Done do
            task.wait()  
        end
        if teez then 
            teez:Disconnect() 
        end
        getgenv().Done = false
    end)
end
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window =
    Fluent:CreateWindow(
    {
        Title = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
        SubTitle = "by 7sone (VR7 Team)",
        TabWidth = 160,
        Size = UDim2.fromOffset(580, 460),
        Acrylic = false,
        Theme = Guitheme,
        MinimizeKey = Enum.KeyCode.LeftControl
    }
)
local Tabs = {
    Main = Window:AddTab({Title = "Vehicles", Icon = "rbxassetid://10709789810"}),
    LocalPlr = Window:AddTab({Title = "LocalPlayer", Icon = "rbxassetid://10734964441"}),
    ESP = Window:AddTab({Title = "ESP", Icon = "rbxassetid://10723346959"}),
    Teleports = Window:AddTab({Title = "Teleports", Icon = "rbxassetid://10734898355"})
}
local Options = Fluent.Options
local Players = game.Players
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
Player.CharacterAdded:Connect(
    function(NewCharacter)
        Character = NewCharacter
        HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
    end
)
local Locations = {
    {Title = "Nearest Dealer", Position = nil, Special = true},
    {Title = "Da Bank", Position = Vector3.new(-1185, 8, 3133)},
    {Title = "Vault", Position = Vector3.new(-1243, 8, 3148)},
    {Title = "Jeweler", Position = Vector3.new(-395, 6, 3543)},
    {Title = "Police Station", Position = Vector3.new(-1678, 6, 2794)},
    {Title = "Fire Station", Position = Vector3.new(-962, 6, 3865)},
    {Title = "Hospital", Position = Vector3.new(-221, 6, 1113)},
    {Title = "ADAC Shop", Position = Vector3.new(-335, 5, 478)},
    {Title = "Truck Company", Position = Vector3.new(708, 6, 1426)},
    {Title = "Bus Company", Position = Vector3.new(-1729, 6, -1282)},
    {Title = "Prison", Position = Vector3.new(-568, 6, 2897)},
    {Title = "Ares Fuel", Position = Vector3.new(-867, 5, 1520)},
    {Title = "Osse Fuel", Position = Vector3.new(-41, 5, -755)},
    {Title = "Gas N-Go Fuel", Position = Vector3.new(-1544, 5, 3796)},
    {Title = "The Club", Position = Vector3.new(-1777, 11, 3142)},
    {Title = "Parking Garage", Position = Vector3.new(-1402, -24, 3608)},
    {Title = "Smuggler", Position = Vector3.new(808, -23, -1512)},
    {Title = "Car Dealership", Position = Vector3.new(-1392, 6, 988)},
    {Title = "Tools Shop", Position = Vector3.new(-756, 5, 632)},
    {Title = "Farm Shop", Position = Vector3.new(-957, 7, -1177)},
    {Title = "Clothes Shop", Position = Vector3.new(478, 5, -1424)}
}
--Anti CheatBreaker
if not getgenv().BreakedBefore then
        getgenv().Working = true
local yes,no = pcall(function()
    local function funcNil()
        local func = nil
        for i, v in pairs(getgc(true)) do
            if
                type(v) == "function" and
                    getfenv(v).script ==
                        game:GetService("Players").LocalPlayer.PlayerScripts.Code.controllers.antiCheatController and
                    tostring(getinfo(v).name) ~= nil and
                    tostring(getinfo(v).name) ~= ""
            then
                func = v
            end
        end
        return func
    end
    repeat
        task.wait()
        for i, v in pairs(getgc(true)) do
            if
                type(v) == "function" and
                    getfenv(v).script ==
                        game:GetService("Players").LocalPlayer.PlayerScripts.Code.controllers.antiCheatController
            then
                hookfunction(
                    v,
                    function()
                        return
                    end
                )
            end
        end
        wait(0.5)
    until funcNil() == nil
end)
if no then
    getgenv().Working = false
end
    getgenv().BreakedBefore = true
end
--Main Functions
function DetectNear(Distance, Type)
    local DetectionRadius = tonumber(Distance)

    for _, Part in ipairs(workspace:GetDescendants()) do
        if Part:IsA(tostring(Type)) then
            local DistanceToPart = (Part.Position - HumanoidRootPart.Position).Magnitude
            if DistanceToPart <= DetectionRadius then
                return Part
            end
        end
    end
    return false
end
-- Main Functions 
function DisableCollisionsNearSeats(Radius)
    local Parts = workspace:GetPartBoundsInRadius(HumanoidRootPart.Position, Radius)
    for _, Part in ipairs(Parts) do
        if Part:IsA("VehicleSeat") then
            for _, P in ipairs(Part.Parent:GetDescendants()) do
                if P:IsA("BasePart") then
                    P.CanCollide = false
                end
            end
        end
    end
end
function Notify(Title, Content, Time)
    Fluent:Notify(
        {
            Title = tostring(Title),
            Content = tostring(Content),
            Duration = tonumber(Time)
        }
    )
end
local function GetNearest()
    local Nearest = nil
    local Shortest = math.huge
    local PlrPos = Character:WaitForChild("HumanoidRootPart").Position
    for _, Dlr in pairs(workspace.Dealers:GetChildren()) do
        if Dlr:IsA("Model") and Dlr.PrimaryPart then
            local DlrPos = Dlr.PrimaryPart.Position
            local Dist = (PlrPos - DlrPos).Magnitude
            if Dist < Shortest then
                Shortest = Dist
                Nearest = Dlr
            end
        end
    end
    return Nearest
end
local function shiftfind()
    local shift = nil
    local uifind = nil
    local busdriver = getfenv().drivertype or "Rural Bus Driver"
    for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetDescendants()) do
        if
            v.ClassName == "TextLabel" and v.Text == "Start Shift" or
                v.ClassName == "ImageButton" and v.Name == busdriver
         then
            shift = v.Parent
        end
    end
    if shift ~= nil then
        for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetChildren()) do
            if shift:IsDescendantOf(v) then
                uifind = v
            end
        end
    end
    return uifind
end
local function dealership()
    local deal = nil
    local uifind = nil
    for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetDescendants()) do
        if
            v.ClassName == "TextLabel" and v.Text == "Stuttgart Lastkraft" or
                v.ClassName == "TextLabel" and v.Text == "Stuttgart Omnibus"
         then
            deal = v
        end
    end
    if deal ~= nil then
        for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetChildren()) do
            if deal:IsDescendantOf(v) then
                uifind = v
            end
        end
    end
    return uifind
end
local function partfind()
    local part = nil
    for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetDescendants()) do
        if v.ClassName == "BillboardGui" and v.Adornee ~= nil then
            part = v.Adornee
        end
    end
    return part
end
local function destination()
    local dest = nil
    for i, v in pairs(workspace.DeliveryDestinations:GetDescendants()) do
        if v.Name == "SelectionBox" and v.Visible == true and v.Transparency ~= 1 then
            dest = v.Parent
        end
    end
    return dest
end
getgenv().ESPenabled = true
function ESP(Plr)
    task.spawn(function()
        if game.CoreGui:FindFirstChild(Plr.Name .. '_ESP') then
            return 
        end
        if Plr.Character and Plr.Name ~= Players.LocalPlayer.Name then
            local ESPholder = Instance.new("Folder")
            ESPholder.Name = Plr.Name .. '_ESP'
            ESPholder.Parent = game.CoreGui

            repeat wait() until Plr.Character and Plr.Character:FindFirstChild("HumanoidRootPart") and Plr.Character:FindFirstChildOfClass("Humanoid")

            for B, N in pairs(Plr.Character:GetChildren()) do
                if N:IsA("BasePart") then
                    local A = Instance.new("BoxHandleAdornment")
                    A.Name = Plr.Name
                    A.Parent = ESPholder
                    A.Adornee = N
                    A.AlwaysOnTop = true
                    A.ZIndex = 10
                    A.Size = N.Size
                    A.Transparency = EspTransparency
                    A.Color = Plr.TeamColor
                end
            end

            if Plr.Character:FindFirstChild("Head") then
                local BillboardGui = Instance.new("BillboardGui")
                local TextLabel = Instance.new("TextLabel")
                BillboardGui.Adornee = Plr.Character.Head
                BillboardGui.Name = Plr.Name
                BillboardGui.Parent = ESPholder
                BillboardGui.Size = UDim2.new(0, 100, 0, 150)
                BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
                BillboardGui.AlwaysOnTop = true

                TextLabel.Parent = BillboardGui
                TextLabel.BackgroundTransparency = 1
                TextLabel.Position = UDim2.new(0, 0, 0, -50)
                TextLabel.Size = UDim2.new(0, 100, 0, 100)
                TextLabel.Font = Enum.Font.SourceSansSemibold
                TextLabel.TextSize = 20
                TextLabel.TextStrokeTransparency = 0
                TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
                TextLabel.ZIndex = 10
                TextLabel.TextColor3 = Plr.TeamColor.Color
                TextLabel.Text = 'Name: ' .. Plr.Name

                local EspLoopFunc
                local TeamChange
                local AddedFunc

                AddedFunc = Plr.CharacterAdded:Connect(function()
                    if getgenv().ESPenabled then
                        EspLoopFunc:Disconnect()
                        TeamChange:Disconnect()
                        ESPholder:Destroy()
                        repeat wait(1) until Plr.Character:FindFirstChild("HumanoidRootPart") and Plr.Character:FindFirstChildOfClass("Humanoid")
                        ESP(Plr)
                        AddedFunc:Disconnect()
                    else
                        TeamChange:Disconnect()
                        AddedFunc:Disconnect()
                    end
                end)

                TeamChange = Plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
                    if getgenv().ESPenabled then
                        TextLabel.TextColor3 = Plr.TeamColor.Color
                        EspLoopFunc:Disconnect()
                        AddedFunc:Disconnect()
                        ESPholder:Destroy()
                        repeat wait(1) until Plr.Character:FindFirstChild("HumanoidRootPart") and Plr.Character:FindFirstChildOfClass("Humanoid")
                        ESP(Plr)
                        TeamChange:Disconnect()
                    else
                        TeamChange:Disconnect()
                    end
                end)

                local function EspLoop()
                    if game.CoreGui:FindFirstChild(Plr.Name .. '_ESP') then
                        if Plr.Character and Plr.Character:FindFirstChild("HumanoidRootPart") and Plr.Character:FindFirstChildOfClass("Humanoid") and Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
                            local Pos = math.floor((Players.LocalPlayer.Character.HumanoidRootPart.Position - Plr.Character.HumanoidRootPart.Position).magnitude)
                            TextLabel.Text = 'Name: @' .. Plr.Name .. ' | Distance: ' .. Pos
                            Plr.Character:FindFirstChild("Humanoid").NameDisplayDistance = 0
                        end
                    else
                        pcall(function() Plr.Character:FindFirstChild("Humanoid").NameDisplayDistance = 16 end)
                        TeamChange:Disconnect()
                        AddedFunc:Disconnect()
                        EspLoopFunc:Disconnect()
                    end
                end
                EspLoopFunc = game:GetService("RunService").RenderStepped:Connect(EspLoop)
            end
        end
    end)
end
function CEsp(Car)
    if Car then
        if not Car:FindFirstChild("Esp",true) then
            local Highlight = Instance.new("Highlight")
            Highlight.Name = "Esp"
            Highlight.Parent = Car
            Highlight.FillTransparency = 0.8
            Highlight.OutlineTransparency = 0
            Highlight.FillColor = Color3.new(255, 215, 0)
            Highlight.OutlineColor = Color3.new(0, 0, 0)
        end
    end
end
local Worked
function To(CF)
    if Worked then
        Notify("Note", "Please wait Before use it again", 3)
        return
    end
    Worked = true
    local Character = game.Players.LocalPlayer.Character
    Character.Humanoid.Sit = true
    wait(0.1)
    local j = 0
    repeat
        task.wait()
        j = j + 1
        if not Character.Humanoid.Sit then
            Character.Humanoid.Sit = true
        end
        Character.HumanoidRootPart.CFrame = CFrame.new(CF)
        Character.Humanoid.WalkSpeed = 0
    until j >= 70
    Character.Humanoid.Sit = false
    wait()
    Character.Humanoid.WalkSpeed = 16
    Worked = false
end
--Gui Functions
do
    --[[local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Vehicles Stealer", Default = false})
    local ZarbaGui
    Toggle:OnChanged(
        function()
            if Options.MyToggle.Value then
                ZarbaGui = Instance.new("ScreenGui")
                local Button = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner", Button)

                ZarbaGui.Parent = game.CoreGui

                Button.Parent = ZarbaGui
                Button.Draggable = true
                Button.Name = "VehicleStealer"
                Button.Text = "Steal Vehicle"
                Button.TextScaled = true
                Button.Size = UDim2.new(0, 200, 0, 50)
                Button.Position = UDim2.new(0.5, -100, 0.55, 50)
                Button.BackgroundColor3 = Color3.fromRGB(0, 0, 139)
                Button.TextColor3 = Color3.fromRGB(255, 255, 255)
                Button.BorderSizePixel = 0
                Button.TextSize = 24
                Button.Font = Enum.Font.GothamBold
                Button.TextStrokeTransparency = 0.8
                Button.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                Button.AnchorPoint = Vector2.new(0.5, 0.5)

                Button.MouseButton1Click:Connect(
                    function()
                        if Character.Humanoid.Sit then
                            Notify("Error", "You Are Sitting", 5)
                        else
                            local NearCar = DetectNear(8, "VehicleSeat")
                            if NearCar and not NearCar.Occupant then
                                NearCar:Sit(game.Players.LocalPlayer.Character.Humanoid)
                            elseif NearCar then
                                Notify("Error", "There Is Someone Sitting On Driver Seat", 5)
                            elseif not NearCar then
                                Notify("Error", "There Is No Vehicle Nearby", 5)
                            end
                        end
                    end
                )
            else
                if ZarbaGui then
                    ZarbaGui:Remove()
                end
            end
        end
    )]]
    local FarmS = Tabs.Main:AddSection("Auto Farms")
if not getgenv().Working then
        FarmS:AddParagraph({
        Title = "Sorry",
        Content = "You Exploit Can't Handle The Farms."
        })
else
workspace.Gravity = 196
local CarGodd = FarmS:AddToggle("CarGodd", {Title = "Truck Company Farm", Default = false})
    CarGodd:OnChanged(
        function()
            if Options.CarGodd.Value then
                Notify("Note","If Nothing Happens Then Take The Shift Manually And Spawn A Truck And It Will Start")
            end
            getfenv().trucker = Options.CarGodd.Value
            spawn(
                function()
                    while getfenv().trucker do
                        task.wait()
                        pcall(
                            function()
                                if
                                    workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name) and
                                        workspace.Vehicles[game.Players.LocalPlayer.Name].Body:FindFirstChild("Trailer") and
                                        game.Players.LocalPlayer.Character.Humanoid.SeatPart == nil
                                 then
                                    local plr = game.Players.LocalPlayer
                                    local car = workspace.Vehicles[plr.Name]
                                    if getfenv().tween ~= nil then
                                        getfenv().tween:Cancel()
                                    end
                                    car.DriveSeat:Sit(game.Players.LocalPlayer.Character.Humanoid)
                                end
                            end
                        )
                    end
                end
            )
            spawn(
                function()
                    while getfenv().trucker do
                        task.wait()
                        pcall(
                            function()
                                if
                                    game.Players.LocalPlayer.Character.Humanoid.Health < 60 and
                                        game.Players.LocalPlayer.Character.Humanoid.SeatPart == nil
                                 then
                                    game.Players.LocalPlayer.Character:BreakJoints()
                                end
                            end
                        )
                    end
                end
            )
            spawn(
                function()
                    while getfenv().trucker do
                        task.wait()
                        pcall(
                            function()
                                for i, v in pairs(
                                    workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name):GetDescendants()
                                ) do
                                    pcall(
                                        function()
                                            v.Velocity = Vector3.new(0, 0, 0)
                                        end
                                    )
                                end
                            end
                        )
                    end
                end
            )
            local function findxpui()
                local xpui = nil
                local test = nil
                for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetDescendants()) do
                    if
                        v.ClassName == "TextLabel" and string.find(v.Text, "XP") and v.Parent.ClassName == "ImageButton" and
                            tonumber(v.Text:split(" ")[1])
                     then
                        test = v
                        break
                    end
                end
                if test ~= nil then
                    for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetChildren()) do
                        if test:IsDescendantOf(v) then
                            xpui = v
                        end
                    end
                end
                return xpui
            end
            spawn(
                function()
                    while getfenv().trucker do
                        wait()
                        pcall(
                            function()
                                if
                                    findxpui() ~= nil and findxpui().Enabled == true and
                                        game.Players.LocalPlayer.Character.Humanoid.SeatPart ~= nil
                                 then
                                    _G.rat = nil
                                    local num = 0
                                    for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetDescendants()) do
                                        if
                                            v.ClassName == "TextLabel" and string.find(v.Text, "XP") and
                                                v.Parent.ClassName == "ImageButton"
                                         then
                                            local Val = tonumber(v.Text:split(" ")[1])
                                            if Val > num then
                                                num = Val
                                                firesignal(v.Parent.MouseButton1Click)
                                            end
                                        end
                                    end
                                end
                            end
                        )
                    end
                end
            )

            while getfenv().trucker do
                wait()
                local p, call =
                    pcall(
                    function()
                        workspace.Gravity = 196
                        if workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name) and not workspace.Vehicles[game.Players.LocalPlayer.Name].Body:FindFirstChild("Trailer") then
                            if game.Players.LocalPlayer:DistanceFromCharacter(Vector3.new(708, 6, 1426)) > 2 then
                            To(Vector3.new(708, 6, 1426))
                            wait(2)
                            end
                            if game.Players.LocalPlayer:DistanceFromCharacter(Vector3.new(708, 6, 1426)) < 20 then
                                repeat
                                    task.wait()
                                until game.Players.LocalPlayer:DistanceFromCharacter(Vector3.new(708, 6, 1426)) < 20
                                repeat
                                    wait()
                                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game) wait()
                                    game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
                                until shiftfind() ~= nil or not getfenv().trucker
                                wait(1)
                                local timestried = 0
                                repeat
                                    wait()
                                    if game.Players.LocalPlayer.Team ~= game:GetService("Teams").TruckCompany.Name then
                                        spawn(function()
                                            repeat
                                                wait()
                                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game) wait()
                                                game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
                                                for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetDescendants()) do
                                                    if v.ClassName == "TextLabel" and v.Text == "Start Shift" then
                                                        firesignal(v.Parent.MouseButton1Click)
                                                    end
                                                end
                                            until shiftfind() ~= nil or not getfenv().trucker
                                        end)
                                        task.wait(1)
                                        if game.Players.LocalPlayer.Team ~= game:GetService("Teams").TruckCompany.Name and timestried > 10 then
                                            for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:GetDescendants()) do
                                                if v.ClassName == "TextLabel" and v.Text == "Start Shift" then
                                                    firesignal(v.Parent.MouseButton1Click)
                                                end
                                            end
                                            timestried = 0
                                        end
                                        for i, v in pairs(
                                            game:GetService("Players").LocalPlayer.PlayerGui:GetDescendants()
                                        ) do
                                            if
                                                v.ClassName == "ImageButton" and
                                                    v.ImageColor3 == Color3.fromRGB(39, 174, 96)
                                             then
                                                if v.Parent ~= nil then
                                                    pcall(
                                                        function()
                                                            firesignal(v.MouseButton1Down)
                                                        end
                                                    )
                                                end
                                            end
                                        end
                                        timestried = timestried + 1
                                        task.wait(1)
                                    end
                                until findxpui() ~= nil
                                repeat
                                    wait()
                                until findxpui() ~= nil and findxpui().Enabled == true
                                _G.rat = nil
                                local num = 0
                                for i, v in pairs(findxpui():GetDescendants()) do
                                    if v.ClassName == "TextLabel" and string.find(v.Text, "XP") then
                                        local Val = tonumber(v.Text:split(" ")[1])
                                        if Val > num then
                                            num = Val
                                            _G.rat = v.Parent
                                        end
                                    end
                                end
                                if _G.rat ~= nil then
                                    firesignal(_G.rat.MouseButton1Click)
                                end
                                game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(707, 6, 1412))
                                game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:wait()
                                game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(698, 6, 1406))
                                game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:wait()
                                repeat
                                    wait()
                                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game) wait()
                                    game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
                                until dealership() ~= nil and dealership().Enabled == true or not getfenv().trucker
                                for i, v in pairs(dealership():GetDescendants()) do
                                    if v.ClassName == "TextLabel" and v.Text == "Stuttgart Lastkraft" then
                                        repeat
                                            wait()
                                            if v.Parent ~= nil then
                                                firesignal(v.Parent.MouseButton1Click)
                                                wait(1)
                                                for a, b in pairs(dealership():GetDescendants()) do
                                                    if
                                                        b.ClassName == "TextLabel" and b.Text == "Spawn Vehicle" or
                                                            b.ClassName == "TextLabel" and b.Text == "Unlock Vehicle"
                                                     then
                                                        firesignal(b.Parent.MouseButton1Click)
                                                    end
                                                end
                                            end
                                        until workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name) and
                                            workspace.Vehicles[game.Players.LocalPlayer.Name].Body:FindFirstChild(
                                                "Trailer"
                                            )
                                    end
                                end
                            end
                        elseif
                            workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name) and
                                workspace.Vehicles[game.Players.LocalPlayer.Name].Body:FindFirstChild("Trailer") and
                                game.Players.LocalPlayer.Character.Humanoid.SeatPart ~= nil
                         then
                            workspace.Gravity = 0
                            local plr = game.Players.LocalPlayer
                            local chr = plr.Character
                            local car = workspace.Vehicles[plr.Name]
                            local pos = destination() or partfind()
                            car.PrimaryPart = car.Body.Mass
                            local dist =
                                (car.WorldPivot.Position - car.WorldPivot.Position + Vector3.new(0, 500, 0)).magnitude
                            if
                                (car.WorldPivot.Position -
                                    Vector3.new(pos.Position.X, car.PrimaryPart.Position.Y, pos.Position.Z)).magnitude >
                                    100
                             then
                                car:PivotTo(car.WorldPivot + Vector3.new(0, 500, 0))
                            end
                            local plr = game.Players.LocalPlayer
                            local chr = plr.Character
                            local pos = destination() or partfind()
                            local car = workspace.Vehicles[plr.Name]
                            local dist = (car.WorldPivot.Position - pos.Position + Vector3.new(0, 500, 0)).magnitude
                            if
                                (car.WorldPivot.Position -
                                    Vector3.new(pos.Position.X, car.PrimaryPart.Position.Y, pos.Position.Z)).magnitude >
                                    100
                             then
                                local TweenService = game:GetService("TweenService")
                                local TweenInfoToUse =
                                    TweenInfo.new(
                                    dist / 80,
                                    Enum.EasingStyle.Linear,
                                    Enum.EasingDirection.InOut,
                                    0,
                                    false,
                                    0
                                )

                                local TweenValue = Instance.new("CFrameValue")
                                TweenValue.Value = car.WorldPivot

                                TweenValue.Changed:Connect(
                                    function()
                                        car:PivotTo(TweenValue.Value)
                                    end
                                )
                                getfenv().tween =
                                    TweenService:Create(
                                    TweenValue,
                                    TweenInfoToUse,
                                    {Value = pos.CFrame + Vector3.new(0, 500, 0)}
                                )
                                getfenv().tween:Play()
                                repeat
                                    task.wait()
                                until getfenv().tween.PlaybackState == Enum.PlaybackState.Cancelled or
                                    getfenv().tween.PlaybackState == Enum.PlaybackState.Completed or
                                    getfenv().tween.PlaybackState == Enum.PlaybackState.Paused
                                if getfenv().tween.PlaybackState == Enum.PlaybackState.Cancelled then
                                    wait(5)
                                end
                            end
                            local plr = game.Players.LocalPlayer
                            local chr = plr.Character
                            local pos = destination() or partfind()
                            local car = workspace.Vehicles[plr.Name]
                            local dist = (car.WorldPivot.Position - pos.Position).magnitude
                            if
                                (car.WorldPivot.Position -
                                    Vector3.new(pos.Position.X, car.PrimaryPart.Position.Y, pos.Position.Z)).magnitude <
                                    100
                             then
                                car:PivotTo(pos.CFrame)
                                workspace.Gravity = 196
                                for i, v in pairs(workspace.DeliveryDestinations:GetDescendants()) do
                                    if v.Name == "SelectionBox" and v.Visible == true then
                                        car:PivotTo(v.Parent.CFrame + Vector3.new(0, 5, 0))
                                    end
                                end
                                local time = tick()
                                repeat
                                    task.wait()
                                until partfind() == nil or
                                    game.Players.LocalPlayer:DistanceFromCharacter(partfind().Position) > 70 or
                                    tick() - time > 40
                            end
                        end
                    end
                )
            end
        end
    )
end
    local Sound = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
    Sound.SoundId = "rbxassetid://7854285068"
    Sound:Play()
    Sound.Ended:Connect(function() Sound:Destroy() end)
    local VehicleP = Tabs.Main:AddSection("Vehicle Properties")
    local CarGod = VehicleP:AddToggle("CarGod", {Title = "Vehicle GodMode", Default = false})
    CarGod:OnChanged(
        function()
            getgenv().GodCar = Options.CarGod.Value
            local Seat = Player.Character.Humanoid.SeatPart
            while getgenv().GodCar and task.wait() do
                if Seat and Seat:IsA("VehicleSeat") then
                    local Car = Seat.Parent
                    Car:SetAttribute("IsOn", true)
                    Car:SetAttribute("CurrentHealth", 1)
                    Car:SetAttribute("CurrentFuel", 1)
                    local Wheels = Car.Wheels
                    for _, v in ipairs(Wheels:GetDescendants()) do
                        if v.Name == "Parts" then
                            v.RimB.Transparency = 0
                            v.RimW.Transparency = 0
                            v.Tire.Transparency = 0
                            local NewPhysicalProperties = PhysicalProperties.new(0.65, 1.4, 1, 1, 1)
                            v.Parent.CustomPhysicalProperties = NewPhysicalProperties
                        end
                    end
                end
            end
        end
    )
    VehicleP:AddButton(
        {
            Title = "Auto Modifie",
            Description = nil,
            Callback = function()
                if game.Players.LocalPlayer.Character.Humanoid.SeatPart then
                    local CurrentCar = game.Players.LocalPlayer.Character.Humanoid.SeatPart.Parent
                    local Speed = CurrentCar:GetAttribute("MaxSpeed")
                    CurrentCar:SetAttribute("CurrentMaxSpeed", Speed)

                    if not CurrentCar:GetAttribute("MaxSpeedIncreased") then
                        CurrentCar:SetAttribute("MaxSpeed", Speed + 50)
                        CurrentCar:SetAttribute("MaxSpeedIncreased", true)
                    end

                    if CurrentCar.DriveSeat:FindFirstChild("Engine") then
                        CurrentCar.DriveSeat.Engine.SoundId = "rbxassetid://1160914875"
                    elseif CurrentCar.DriveSeat:FindFirstChild("TruckEngine") then
                        CurrentCar.DriveSeat.TruckEngine.SoundId = "rbxassetid://1160914875"
                    end

                    if CurrentCar.DriveSeat:FindFirstChild("EngineOff") then
                        CurrentCar.DriveSeat.EngineOff.SoundId = "rbxassetid://268260239"
                    end

                    if CurrentCar.DriveSeat:FindFirstChild("EngineOn") then
                        CurrentCar.DriveSeat.EngineOn.SoundId = "rbxassetid://402899121"
                    end

                    CurrentCar:SetAttribute("MaxAccelerateForce", 1000)
                    CurrentCar:SetAttribute("MaxBrakeForce", 1000)
                    CurrentCar:SetAttribute("MinAccelerateForce", 350)
                    CurrentCar:SetAttribute("MinBrakeForce", 750)
                    CurrentCar:SetAttribute("ShowElectric", true)
                    CurrentCar:SetAttribute("Type", "electric")
                end
            end
        }
    )
    Acc =
        VehicleP:AddSlider(
        "Slider",
        {
            Title = "Vehicle Acceleration",
            Description = nil,
            Default = 0,
            Min = 0,
            Max = 1000,
            Rounding = 1,
            Callback = function(Value)
                if Character.Humanoid.SeatPart and Character.Humanoid.SeatPart.Name == "DriveSeat" and Value ~= 0 then
                    Character.Humanoid.SeatPart.Parent:SetAttribute("MaxAccelerateForce", Value)
                end
            end
        }
    )
    MaxSpeed =
        VehicleP:AddSlider(
        "Slider",
        {
            Title = "Vehicle MaxSpeed",
            Description = nil,
            Default = 0,
            Min = 0,
            Max = 400,
            Rounding = 1,
            Callback = function(Value)
                if Character.Humanoid.SeatPart and Character.Humanoid.SeatPart.Name == "DriveSeat" and Value ~= 0 then
                    Character.Humanoid.SeatPart.Parent:SetAttribute("MaxSpeed", Value)
                end
            end
        }
    )
    RMaxSpeed =
        VehicleP:AddSlider(
        "Slider",
        {
            Title = "Vehicle ReverseMaxSpeed",
            Description = nil,
            Default = 0,
            Min = 0,
            Max = 200,
            Rounding = 1,
            Callback = function(Value)
                if Character.Humanoid.SeatPart and Character.Humanoid.SeatPart.Name == "DriveSeat" and Value ~= 0 then
                    Character.Humanoid.SeatPart.Parent:SetAttribute("ReverseMaxSpeed", Value)
                end
            end
        }
    )
    if game.Players.LocalPlayer.Character.Humanoid.SeatPart then
        for Attribute, Value in pairs(game.Players.LocalPlayer.Character.Humanoid.SeatPart.Parent:GetAttributes()) do
            if Attribute == "MaxAccelerateForce" then
                Acc:SetValue(Value)
            elseif Attribute == "MaxSpeed" then
                MaxSpeed:SetValue(Value)
            elseif Attribute == "ReverseMaxSpeed" then
                RMaxSpeed:SetValue(Value)
            end
        end
    end
    function ConnectSeat(Character)
        local Humanoid = Character:WaitForChild("Humanoid")
        Humanoid.Seated:Connect(
            function(IsSeated, Seat)
                pcall(function()
                    if IsSeated and Seat:IsA("VehicleSeat") then
                        for Attribute, Value in pairs(Seat.Parent:GetAttributes()) do
                            if Attribute == "MaxAccelerateForce" then
                                Acc:SetValue(Value)
                            elseif Attribute == "MaxSpeed" then
                                MaxSpeed:SetValue(Value)
                            elseif Attribute == "ReverseMaxSpeed" then
                                RMaxSpeed:SetValue(Value)
                            end
                        end
                    end
                end)
            end
        )
    end
    ConnectSeat(Player.Character)
    Player.CharacterAdded:Connect(ConnectSeat)
    local PlayerCharacter = Tabs.LocalPlr:AddSection("Player")
    PlayerCharacter:AddButton(
        {
            Title = "Reset Character",
            Description = "It Will Not Work If You Was Picked Up By A Police",
            Callback = function()
                Player.Character:BreakJoints()
            end
        }
    )
if getgenv().Working then
    PlayerCharacter:AddButton(
        {
            Title = "Infinite Stamina",
            Description = nil,
            Callback = function()
                Window:Dialog(
                    {
                        Title = "Warning",
                        Content = "-This Option Can't Be UnDone! \n-If There Is No Thing Applied This is Mean Your Executor Are Ass(:",
                        Buttons = {
                            {
                                Title = "Confirm",
                                Callback = function()
                                    if not getgenv().iusduajsn then
                                        pcall(
                                            function()
                                                for i, v in pairs(getgc(true)) do
                                                    if type(v) == "function" and getinfo(v).name == "setStamina" then
                                                        func = v
                                                    end
                                                end
                                                hookfunction(
                                                    func,
                                                    function(...)
                                                        local args = {...}
                                                        return args[1], math.huge
                                                    end
                                                )
                                            end
                                        )
                                        getgenv().iusduajsn = true
                                    end
                                end
                            },
                            {
                                Title = "Cancel",
                                Callback = function()
                                    print("LocalPlayer Declined")
                                end
                            }
                        }
                    }
                )
            end
        }
    )
end
    if getgenv().AntiAfkConnect then getgenv().AntiAfkConnect:Disconnect() end
    local AntiAfkToggle = PlayerCharacter:AddToggle("AntiAfkToggle", {Title = "Anti-Afk", Default = false})
    AntiAfkToggle:OnChanged(
        function()
            if Options.AntiAfkToggle.Value then
                getgenv().AntiAfkConnect = game:GetService("Players").LocalPlayer.Idled:connect(function()
                    game:GetService("VirtualUser"):CaptureController()
                    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
                end)
                else
                if getgenv().AntiAfkConnect then getgenv().AntiAfkConnect:Disconnect() end 
            end
        end
    )
    if getfenv().nofall then getfenv().nofall:Disconnect() end
    local AntFallToggle = PlayerCharacter:AddToggle("AntFallToggle", {Title = "Anti-Fall", Default = false})
    AntFallToggle:OnChanged(
        function()
            if Options.AntFallToggle.Value then
                getfenv().nofall = game:GetService("RunService").RenderStepped:Connect(function()
                    pcall(function()
                        if workspace:Raycast(game.Players.LocalPlayer.Character.HumanoidRootPart.Position, Vector3.new(0, -20, 0)).Instance ~= nil and game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity.Y < -30 then 
                            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                        end
                    end)
                end)
            else
                if getfenv().nofall then getfenv().nofall:Disconnect() end
            end
        end
    )
    local AntiArrestToggle = PlayerCharacter:AddToggle("AntiArrestToggle", {Title = "Anti-Arrest", Default = false})
    AntiArrestToggle:OnChanged(
        function()
            while Options.AntiArrestToggle.Value do
                wait()
                pcall(
                    function()
                        if Player.Character:GetAttribute("isCuffed") and not Player.Character:GetAttribute("isHeld") then
                            wait(2)
                            if Player.Character:GetAttribute("isCuffed") and not Player.Character:GetAttribute("isHeld") then
                                Player.Character:BreakJoints()
                            end
                        end
                    end
                )
            end
        end
    )
    if getfenv().antichanged1 then getfenv().antichanged1:Disconnect() end
    local AntDownedToggle = PlayerCharacter:AddToggle("AntDownedToggle", {Title = "Anti-Downed", Default = false})
    AntDownedToggle:OnChanged(
        function()
            if Options.AntDownedToggle.Value then
                getfenv().antichanged1 = game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
                    game.Players.LocalPlayer.Character.Humanoid.Health = 100
                end)
            else
                if getfenv().antichanged1 then getfenv().antichanged1:Disconnect() end
            end
        end
    )
    local Trollings = Tabs.LocalPlr:AddSection("Trolling")
    local Fling = Tabs.LocalPlr:AddToggle("Fling", {Title = "Fling", Default = false})
    Fling:OnChanged(
        function()
            if Options.Fling.Value then
                local RunService = game:GetService("RunService")
                if Player.Character.Humanoid then
                    Player.Character.Humanoid.Died:Connect(
                        function()
                            getgenv().walkflinging = false
                        end
                    )
                end
                getgenv().walkflinging = true
                repeat
                    RunService.Heartbeat:Wait()
                    game.Players.LocalPlayer.Character.Humanoid.JumpHeight = 0
                    for _, P in ipairs(game.Players.LocalPlayer.Character:GetChildren()) do
                        if P:IsA("BasePart") then
                            P.CanCollide = false
                        end
                    end
                    DisableCollisionsNearSeats(50)

                    local character = Player.Character
                    local root = game.Players.LocalPlayer.Character.HumanoidRootPart
                    local parts = {}

                    while not (character and character.Parent and root and root.Parent) do
                        RunService.Heartbeat:Wait()
                        character = Player.Character
                        root = game.Players.LocalPlayer.Character.HumanoidRootPart
                    end

                    for _, part in ipairs(character:GetChildren()) do
                        if part:IsA("BasePart") then
                            table.insert(parts, part)
                        end
                    end

                    local vel, movel = nil, 0.5

                    vel = root.Velocity

                    for _, part in ipairs(parts) do
                        part.Velocity = vel * 10000 + Vector3.new(0, 10000, 0)
                    end

                    RunService.RenderStepped:Wait()
                    if character and character.Parent and root and root.Parent then
                        for _, part in ipairs(parts) do
                            part.Velocity = vel
                        end
                    end

                    RunService.Stepped:Wait()
                    if character and character.Parent and root and root.Parent then
                        for _, part in ipairs(parts) do
                            part.Velocity = vel + Vector3.new(0, movel, 0)
                        end
                        movel = movel * -1
                    end
                until getgenv().walkflinging == false

                local oldp = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                local j = 0
                repeat
                    j = j + 1
                    task.wait()
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldp
                    game.Players.LocalPlayer.Character.Humanoid.JumpHeight = 4
                until j >= 80
            else
                getgenv().walkflinging = false
            end
        end
    )
    Tabs.ESP:AddParagraph({Title = "Note",Content = "The Esp Can Detect Only Loaded Things."})
    local EspToggle = Tabs.ESP:AddToggle("EspToggle", {Title = "Players Esp", Default = false})
    EspToggle:OnChanged(
        function()
            getgenv().loopdopesp = Options.EspToggle.Value 
            if getgenv().loopdopesp then
                while getgenv().loopdopesp and wait(0.1) do 
                    for _,P in ipairs(game.Players:GetPlayers()) do
                        ESP(P)
                    end
                end
            else
                local d = 0
                repeat d += 1 task.wait(0.1)
                for i,c in pairs(game.CoreGui:GetChildren()) do
                    if string.sub(c.Name, -4) == '_ESP' then
                        c:Destroy()
                    end
                    if getgenv().ESPenabled then getgenv().ESPenabled = false end
                end
                until d >= 4 or getgenv().loopdopesp
            end
        end
    )
end
local CarEsp = Tabs.ESP:AddToggle("CarEsp", {Title = "Vehicles Esp", Default = false})
CarEsp:OnChanged(function()
    getgenv().CarsEsp1 = Options.CarEsp.Value
    if getgenv().CarsEsp1 then
        while getgenv().CarsEsp1 do wait(0.1)
            for _,P in ipairs(workspace.Vehicles:GetChildren()) do
                CEsp(P)
            end
        end
    else
        local d = 0 
        repeat d +=1 wait()
            for _,P in ipairs(workspace.Vehicles:GetChildren()) do
                if P:FindFirstChild("Esp",true) and not getgenv().CarsEsp1 then
                    P:FindFirstChild("Esp",true):Destroy()
                end
            end
        until d >= 10 or getgenv().CarsEsp1
    end
end)
local vpt = Tabs.Teleports:AddSection("Vehicles & Players")
vpt:AddButton(
    {
        Title = "Your Car",
        Description = nil,
        Callback = function()
            if workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name) then
                Character.Humanoid.Sit = false
                wait()
                To(
                    workspace.Vehicles[game.Players.LocalPlayer.Name]:FindFirstChild("DriveSeat", true).Position +
                        Vector3.new(0, 5, 0)
                )
            else
                Notify("Error", "Your Car Doesn't Exist", 5)
            end
        end
    }
)

vpt:AddInput("Input", {
    Title = "Teleport To",
    Description = "Player Name (Only Loaded)",
    Default = nil,
    Placeholder = nil,
    Numeric = false,
    Finished = true,
    Callback = function(Value)
        for _,p in ipairs(game.Players:GetPlayers()) do
            if p.Name:lower():sub(1,#Value) == Value:lower() or p.DisplayName:lower():sub(1,#Value) == Value:lower() then
                if p ~= game.Players.LocalPlayer then
                    local t,d = pcall(function()
                    To(p.Character.HumanoidRootPart.Position)
                    end)
                    if d then
                        Notify("You Can't Teleport","Player Isn't Loaded",4)
                    end
                    break
                end
            end
        end
    end
})
--[[local ClickTp = Tabs.Teleports:AddToggle("ClickTp", {Title = "ClickTp", Default = false })
ClickTp:OnChanged(function()
    getgenv().EnabledC = Options.ClickTp.Value
    local Mouse = Player:GetMouse()
    Mouse.Button1Down:Connect(function()
        if EnabledC then
            To(Mouse.Hit.Position)
        end
    end)
end)]]
local PlacesS = Tabs.Teleports:AddSection("Places")
PlacesS:AddParagraph(
    {
        Title = "Note",
        Content = "Spamming Can Get You Kicked!"
    }
)
for _, Location in pairs(Locations) do
    PlacesS:AddButton(
        {
            Title = Location.Title,
            Description = nil,
            Callback = function()
                game.Players.LocalPlayer.Character.Humanoid.Sit = false
                wait()
                if Location.Special and Location.Title == "Nearest Dealer" then
                    if GetNearest() then
                        To(GetNearest().PrimaryPart.CFrame * Vector3.new(0, 0, -4))
                    end
                elseif Location.Position then
                    Notify("Warning", "Spamming This Option Can Get You Kicked", 5)
                    To(Location.Position)
                end
            end
        }
    )
end
Window:SelectTab(1)
